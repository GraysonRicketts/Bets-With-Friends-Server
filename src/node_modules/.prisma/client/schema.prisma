// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  displayName String  @map("display_name")
  email    String @unique @map("user_name")
  
  password    String?

  userGroup UserGroup[]

  id        String    @id @default(dbgenerated("gen_random_uuid ()"))
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamptz(3)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)

  @@map("user")
}

model UserGroup {
  user    User   @relation(fields: [userId], references: [id])
  userId  String @map("user_id")
  group   Group  @relation(fields: [groupId], references: [id])
  groupId String @map("group_id")

  role PrivelegeLevel @default(ADD_MEMBER)

  id        String    @id @default(dbgenerated("gen_random_uuid ()"))
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt DateTime  @updatedAt  @map("updated_at") @db.Timestamptz(3)
  deletedAt DateTime?  @map("deleted_at") @db.Timestamptz(3)

  @@map("user_group")
}

model Group {
  name      String
  userGroup UserGroup[]

  id        String    @id @default(dbgenerated("gen_random_uuid ()"))
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamptz(3)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)

  @@map("group")
}

model Audit {
  id        String   @id @default(dbgenerated("gen_random_uuid ()"))
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(3)
  before    Json?
  diff      Json?

  @@map("audit")
}

enum PrivelegeLevel {
  OWNER
  ADD_MEMBER
  ADD_BET
}
